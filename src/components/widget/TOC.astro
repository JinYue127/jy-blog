---
import type { MarkdownHeading } from "astro";
import { siteConfig } from "@config";

interface Props {
  class?: string;
  headings: MarkdownHeading[];
}

let { headings = [] } = Astro.props;

let minDepth = 10;
for (const heading of headings) {
  minDepth = Math.min(minDepth, heading.depth);
}

const className = Astro.props.class;

const removeTailingHash = (text: string) => {
  let lastIndexOfHash = text.lastIndexOf("#");
  if (lastIndexOfHash != text.length - 1) {
    return text;
  }

  return text.substring(0, lastIndexOfHash);
};

let heading1Count = 1;

const maxLevel = siteConfig.toc.depth;
---

<div class:list={[className]}>
  {
    headings
      .filter((heading) => heading.depth < minDepth + maxLevel)
      .map((heading) => (
        <a
          href={`#${heading.slug}`}
          class="relative flex min-h-9 w-full gap-2 rounded-xl px-2 py-2 transition hover:bg-[var(--toc-btn-hover)] active:bg-[var(--toc-btn-active)]"
        >
          <div
            class:list={[
              "flex h-5 w-5 shrink-0 items-center justify-center rounded-lg text-xs font-bold",
              {
                "bg-[var(--toc-badge-bg)] text-[var(--btn-content)]":
                  heading.depth == minDepth,
                "ml-4": heading.depth == minDepth + 1,
                "ml-8": heading.depth == minDepth + 2,
              },
            ]}
          >
            {heading.depth == minDepth && heading1Count++}
            {heading.depth == minDepth + 1 && (
              <div class="h-2 w-2 rounded-[0.1875rem] bg-[var(--toc-badge-bg)]" />
            )}
            {heading.depth == minDepth + 2 && (
              <div class="h-1.5 w-1.5 rounded-sm bg-black/5 dark:bg-white/10" />
            )}
          </div>
          <div
            class:list={[
              "text-sm",
              {
                "text-50":
                  heading.depth == minDepth || heading.depth == minDepth + 1,
                "text-30": heading.depth == minDepth + 2,
              },
            ]}
          >
            {removeTailingHash(heading.text)}
          </div>
        </a>
      ))
  }
</div>
